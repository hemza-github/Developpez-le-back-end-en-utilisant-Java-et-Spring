package com.hemza.rental_backend.controller;

import com.hemza.rental_backend.dto.RegisterRequestDTO;
import com.hemza.rental_backend.service.UserService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
 * Contr√¥leur REST responsable des op√©rations d'authentification.
 * Ici, il g√®re l'enregistrement des utilisateurs.
 */
@RestController
@RequestMapping("/api/auth") // Tous les endpoints de ce contr√¥leur commenceront par /api/auth
public class AuthController {

  // Injection du service m√©tier qui contient la logique d‚Äôenregistrement des
  // utilisateurs
  @Autowired
  private UserService userService;

  /**
   * Endpoint HTTP POST pour enregistrer un nouvel utilisateur.
   *
   * @param request Les donn√©es d'inscription envoy√©es par le client (nom, email,
   *                mot de passe)
   * @return Une r√©ponse HTTP contenant un token si succ√®s, ou un message d'erreur
   *         sinon
   */
  @PostMapping("/register")
  public ResponseEntity<?> register(@RequestBody RegisterRequestDTO request) {
    try {
    // Appel du service m√©tier pour enregistrer l'utilisateur et g√©n√©rer un token
      String token = userService.register(request); // ‚úÖ Utilisation du service s√©curis√©
      return ResponseEntity.ok(token);
    } catch (IllegalArgumentException e) {
      // üí• En cas d'erreur (ex : email d√©j√† utilis√©), on renvoie un code 400 avec le message
      return ResponseEntity.badRequest().body(e.getMessage());
    }
  }
}
